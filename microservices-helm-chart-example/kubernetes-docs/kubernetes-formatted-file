# Build & Dockerize Microservices
mvn clean package -DskipTests
docker build -t order-service:1.0 .

mvn clean package -DskipTests
docker build -t customer-service:1.0 .

mvn clean package -DskipTests
docker build -t payment-service:1.0 .

# Deploy Microservices
kubectl apply -f order-deployment.yaml
kubectl apply -f customer-deployment.yaml
kubectl apply -f payment-deployment.yaml

kubectl get pods
kubectl get svc

# Service URLs
# http://localhost:30081/order       → Order Service
# http://localhost:30082/customer    → Customer Service
# http://localhost:30083/payment     → Payment Service

# View Logs
kubectl logs customer-service-6f9dc8bb77-9lg9l
kubectl logs order-service-5566799dd-8xlmt
kubectl logs payment-service-845dbcdf85-fqj6h

# Apply ConfigMaps
kubectl apply -f order-configmap.yaml
kubectl apply -f customer-configmap.yaml
kubectl apply -f payment-configmap.yaml

# Test Microservices Internally
kubectl exec -it customer-service-64f6b687d4-r4b6n -- curl http://localhost:8085/customer
curl http://localhost:30081/order

# Ingress
kubectl get pods -n ingress-nginx
curl http://localhost:30082/customer
curl http://localhost:30083/payment
kubectl apply -f ingress.yaml

# Helm Install / Uninstall / Upgrade
helm install microservices .\microservices-chart-corrected -f .\microservices-chart-corrected\values-test.yaml
helm uninstall microservices-test

kubectl create namespace dev
kubectl create namespace test

helm install microservices-dev . -f values-dev.yaml -n dev
helm install microservices-test . -f values-test.yaml -n test

helm upgrade microservices . -f values-dev.yaml
helm uninstall microservices
helm uninstall microservices-dev -n dev
helm uninstall microservices-test -n test

# Secrets
kubectl apply -f order-service-secret.yaml
kubectl apply -f customer-payment-secret.yaml
kubectl get secrets
kubectl describe secret order-service-secret

# Verify Environment Variables
kubectl exec -it payment-service-7984b5df6f-btjfz -- printenv
kubectl exec -it customer-service-757fc7479b-mgsfl -- printenv
kubectl exec -it payment-service-896664bbb-jr42m -- printenv
kubectl exec -it <pod-name> -- printenv | grep DB_USERNAME
kubectl exec -it <pod-name> -- printenv | grep CUSTOMER_API_KEY
kubectl exec -it payment-service-7984b5df6f-btjfz -- printenv | grep PAYMENT_TOKEN

# Rollout Restart
kubectl rollout restart deployment customer-service
kubectl rollout restart deployment order-service
kubectl rollout restart deployment payment-service

# Delete All Resources
kubectl delete deployment --all
kubectl delete svc customer-service order-service payment-service
kubectl delete secret customer-payment-secret order-service-secret payment-service-secret
kubectl delete ingress microservices-ingress
kubectl delete all --all -n dev
kubectl delete all --all -n test
helm uninstall microservices -n default
helm uninstall microservices-dev -n dev
helm uninstall microservices-test -n test

# Patch Services
kubectl patch svc microservices-test-customer-service --type='json' -p "[{`"op`": `"replace`", `"path`": `"/spec/ports/0/targetPort`", `"value`": 8082}]"
kubectl patch svc microservices-test-order-service --type='json' -p "[{`"op`": `"replace`", `"path`": `"/spec/ports/0/targetPort`", `"value`": 8081}]"
kubectl patch svc microservices-test-payment-service --type='json' -p "[{`"op`": `"replace`", `"path`": `"/spec/ports/0/targetPort`", `"value`": 8083}]"

# Verify Services
kubectl get svc microservices-test-customer-service -o=jsonpath="{.spec.ports[0].targetPort}"
kubectl get svc microservices-test-order-service -o=jsonpath="{.spec.ports[0].targetPort}"
kubectl get svc microservices-test-payment-service -o=jsonpath="{.spec.ports[0].targetPort}"

curl http://127.0.0.1:30092/customer
curl http://127.0.0.1:30091/order
curl http://127.0.0.1:30093/payment
